Dada la siguiente aproximacion basada en series de taylor:
dPhi/dx = a*PHI_i-2 + b*PHI_i + c * PHI_i+1 Determinar los valores de los coeficientes a b y c de tal manera que la aproximacion sea lo mas precisa posible considerando un espaciamiento donde la malla se va refinanado a la mitad de izquierda a derecha : x_i - x_i-1 = h entonces x_i+1 - x_i = h/2

para i i_-1: h
para i_-1 i_-2: 2h
para i i_+1: h/2


dPHI/dx = -1/36 PHI_i-2 - 7/4 PHI_i + 16/9 PHI_i+1 determine el orden del error de dicha aproximacion

################################################
################################################
################################################
################################################
El iniciso dice: Se desea resolver el problema de conduccion de calor mostrando en la figura utilizando el metodo de diferencias finitas
Para ello se facilita el archivo que describe la malla, los parametros de la ecuacion y las condiciones de borde:
Me dieron todos estos datos para resolver:
close all; clear all; more off;

xnode = [
  0.0000000000000000, 0.0000000000000000; #nodo 1
  0.0000000000000000, 0.1666666666666667; #nodo 2
  0.0000000000000000, 0.3333333333333333; #nodo 3
  0.0000000000000000, 0.5000000000000000; #nodo 4
  0.0000000000000000, 0.6666666666666666; ##nodo 5
  0.0000000000000000, 0.8333333333333333; #nodo 6
  0.0000000000000000, 1.0000000000000000; ##nodo 7

  0.1666666666666667, 0.0000000000000000; #nodo 8
  0.1666666666666667, 0.1666666666666667; #nodo 9
  0.1666666666666667, 0.3333333333333333; #nodo 10
  0.1666666666666667, 0.5000000000000000; #nodo 11
  0.1666666666666667, 0.6666666666666666; #nodo 12
  0.1666666666666667, 0.8333333333333333; #nodo 13
  0.1666666666666667, 1.0000000000000000; #nodo 14

  0.3333333333333333, 0.0000000000000000; #nodo 15
  0.3333333333333333, 0.1666666666666667; #nodo 16
  0.3333333333333333, 0.3333333333333333; #nodo 17
  0.3333333333333333, 0.5000000000000000; #nodo 18
  0.3333333333333333, 0.6666666666666666; #nodo 19
  0.3333333333333333, 0.8333333333333333; #nodo 20
  0.3333333333333333, 1.0000000000000000; #nodo 21

  0.5000000000000000, 0.0000000000000000; #nodo 22
  0.5000000000000000, 0.1666666666666667; #nodo 23
  0.5000000000000000, 0.3333333333333333; #nodo 24

  0.6666666666666666, 0.0000000000000000; #nodo 25
  0.6666666666666666, 0.1666666666666667; #nodo 26
  0.6666666666666666, 0.3333333333333333; #nodo 27

  0.8333333333333333, 0.0000000000000000; #nodo 28
  0.8333333333333333, 0.1666666666666667; #nodo 29
  0.8333333333333333, 0.3333333333333333; #nodo 30

  1.0000000000000000, 0.0000000000000000; #nodo 31
  1.0000000000000000, 0.1666666666666667; #nodo 32
  1.0000000000000000, 0.3333333333333333; #nodo 33
];

##plot(xnode(:,1),xnode(:,2),'o');

icone = [
       1,      8,      9,      2;
       2,      9,     10,      3;
       3,     10,     11,      4;
       4,     11,     12,      5;
       5,     12,     13,      6;
       6,     13,     14,      7;
       8,     15,     16,      9;
       9,     16,     17,     10;
      10,     17,     18,     11;
      11,     18,     19,     12;
      12,     19,     20,     13;
      13,     20,     21,     14;
      15,     22,     23,     16;
      16,     23,     24,     17;
      22,     25,     26,     23;
      23,     26,     27,     24;
      25,     28,     29,     26;
      26,     29,     30,     27;
      28,     31,     32,     29;
      29,     32,     33,     30;
];

DIR = [
       1, 20.0000000000000000;
       1, 100.0000000000000000;
       2, 20.0000000000000000;
       3, 20.0000000000000000;
       4, 20.0000000000000000;
       5, 20.0000000000000000;
       6, 20.0000000000000000;
       7, 20.0000000000000000;
       7, 100.0000000000000000;
       8, 100.0000000000000000;
      14, 100.0000000000000000;
      15, 100.0000000000000000;
      21, 100.0000000000000000;
      22, 100.0000000000000000;
      25, 100.0000000000000000;
      28, 100.0000000000000000;
      31, 20.0000000000000000;
      31, 100.0000000000000000;
      32, 20.0000000000000000;
      33, 20.0000000000000000;
];

NEU = [
      18, 0.0000000000000000, 2;
      19, 0.0000000000000000, 2;
      20, 0.0000000000000000, 2;
      21, 0.0000000000000000, 2;
      24, 0.0000000000000000, 3;
      27, 0.0000000000000000, 3;
      30, 0.0000000000000000, 3;
      33, 0.0000000000000000, 3;
];

ROB = [
];

disp('---------------------------------------------------------------');
disp('Inicializando modelo de datos...');

model.nnodes = size(xnode,1);

model.k = [
    1.0000000000000000;
    1.0000000000000000;
    1.0000000000000000;
    1.0000000000000000;
    1.0000000000000000;
    1.0000000000000000;
    1.0000000000000000;
    1.0000000000000000;
    1.0000000000000000;
    1.0000000000000000;
    1.0000000000000000;
    1.0000000000000000;
    1.0000000000000000;
    1.0000000000000000;
    1.0000000000000000;
    1.0000000000000000;
    1.0000000000000000;
    1.0000000000000000;
    1.0000000000000000;
    1.0000000000000000;
    1.0000000000000000;
    1.0000000000000000;
    1.0000000000000000;
    1.0000000000000000;
    1.0000000000000000;
    1.0000000000000000;
    1.0000000000000000;
    1.0000000000000000;
    1.0000000000000000;
    1.0000000000000000;
    1.0000000000000000;
    1.0000000000000000;
    1.0000000000000000;
];

model.c = [
    0.0000000000000000;
    0.0000000000000000;
    0.0000000000000000;
    0.0000000000000000;
    0.0000000000000000;
    0.0000000000000000;
    0.0000000000000000;
    0.0000000000000000;
    0.0000000000000000;
    0.0000000000000000;
    0.0000000000000000;
    0.0000000000000000;
    0.0000000000000000;
    0.0000000000000000;
    0.0000000000000000;
    0.0000000000000000;
    0.0000000000000000;
    0.0000000000000000;
    0.0000000000000000;
    0.0000000000000000;
    0.0000000000000000;
    0.0000000000000000;
    0.0000000000000000;
    0.0000000000000000;
    0.0000000000000000;
    0.0000000000000000;
    0.0000000000000000;
    0.0000000000000000;
    0.0000000000000000;
    0.0000000000000000;
    0.0000000000000000;
    0.0000000000000000;
    0.0000000000000000;
];

model.G = [
    1000.0000000000000000;
    1000.0000000000000000;
    1000.0000000000000000;
    1000.0000000000000000;
    1000.0000000000000000;
    1000.0000000000000000;
    1000.0000000000000000;
    1000.0000000000000000;
    1000.0000000000000000;
    1000.0000000000000000;
    1000.0000000000000000;
    1000.0000000000000000;
    1000.0000000000000000;
    1000.0000000000000000;
    1000.0000000000000000;
    1000.0000000000000000;
    1000.0000000000000000;
    1000.0000000000000000;
    1000.0000000000000000;
    1000.0000000000000000;
    1000.0000000000000000;
    1000.0000000000000000;
    1000.0000000000000000;
    1000.0000000000000000;
    1000.0000000000000000;
    1000.0000000000000000;
    1000.0000000000000000;
    1000.0000000000000000;
    1000.0000000000000000;
    1000.0000000000000000;
    1000.0000000000000000;
    1000.0000000000000000;
    1000.0000000000000000;
];



a)describa la ecuacion diferencial que se esta resolviendo junto con las condiciones de borde segun la informacion del archivo facilitado

YO TENGO CONDICIONES DE DIRLICHET EN LOS NODOS DE LA CARA IZQUIEDA DEL 1 AL 7, condiciones de NEUMANN EN LA CARA VERTICAL Y HORIZONTAL DERECHA

############################
############################
############################

rho*Cp * aT/at = k*a^2T/ax^2 + G(x) ; x perteneciente a [2,4] pCp = 1 ; k=2 ; G(x)= 100*(4-x) ; T=10|x=2 ; -kaT/ax = 1 |x=4 ; T(x,0)=10;

a) Utilizando el metodo de elementos finitos (Galerkin con funciones de forma lineales) y considerando un esquema temporal explicito expresar el stencil para un nodo en x=3 tomando de referencia deltaX = 0.5