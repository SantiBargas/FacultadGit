close all; clear all; more off;

xnode = [
  0.0000000000000000, 0.0000000000000000;
  0.0000000000000000, 0.1666666666666667;
  0.0000000000000000, 0.3333333333333333;
  0.0000000000000000, 0.5000000000000000;
  0.0000000000000000, 0.6666666666666666;
  0.0000000000000000, 0.8333333333333333;
  0.0000000000000000, 1.0000000000000000;
  0.1666666666666667, 0.0000000000000000;
  0.1666666666666667, 0.1666666666666667;
  0.1666666666666667, 0.3333333333333333;
  0.1666666666666667, 0.5000000000000000;
  0.1666666666666667, 0.6666666666666666;
  0.1666666666666667, 0.8333333333333333;
  0.1666666666666667, 1.0000000000000000;
  0.3333333333333333, 0.0000000000000000;
  0.3333333333333333, 0.1666666666666667;
  0.3333333333333333, 0.3333333333333333;
  0.3333333333333333, 0.5000000000000000;
  0.3333333333333333, 0.6666666666666666;
  0.3333333333333333, 0.8333333333333333;
  0.3333333333333333, 1.0000000000000000;
  0.5000000000000000, 0.0000000000000000;
  0.5000000000000000, 0.1666666666666667;
  0.5000000000000000, 0.3333333333333333;
  0.6666666666666666, 0.0000000000000000;
  0.6666666666666666, 0.1666666666666667;
  0.6666666666666666, 0.3333333333333333;
  0.8333333333333333, 0.0000000000000000;
  0.8333333333333333, 0.1666666666666667;
  0.8333333333333333, 0.3333333333333333;
  1.0000000000000000, 0.0000000000000000;
  1.0000000000000000, 0.1666666666666667;
  1.0000000000000000, 0.3333333333333333;
];

icone = [
       1,      8,      9,      2;
       2,      9,     10,      3;
       3,     10,     11,      4;
       4,     11,     12,      5;
       5,     12,     13,      6;
       6,     13,     14,      7;
       8,     15,     16,      9;
       9,     16,     17,     10;
      10,     17,     18,     11;
      11,     18,     19,     12;
      12,     19,     20,     13;
      13,     20,     21,     14;
      15,     22,     23,     16;
      16,     23,     24,     17;
      22,     25,     26,     23;
      23,     26,     27,     24;
      25,     28,     29,     26;
      26,     29,     30,     27;
      28,     31,     32,     29;
      29,     32,     33,     30;
];

DIR = [
       1, 20.0000000000000000;
       1, 100.0000000000000000;
       2, 20.0000000000000000;
       3, 20.0000000000000000;
       4, 20.0000000000000000;
       5, 20.0000000000000000;
       6, 20.0000000000000000;
       7, 20.0000000000000000;
       7, 100.0000000000000000;
       8, 100.0000000000000000;
      14, 100.0000000000000000;
      15, 100.0000000000000000;
      21, 100.0000000000000000;
      22, 100.0000000000000000;
      25, 100.0000000000000000;
      28, 100.0000000000000000;
      31, 20.0000000000000000;
      31, 100.0000000000000000;
      32, 20.0000000000000000;
      33, 20.0000000000000000;
];

NEU = [
      18, 0.0000000000000000, 2;
      19, 0.0000000000000000, 2;
      20, 0.0000000000000000, 2;
      21, 0.0000000000000000, 2;
      24, 0.0000000000000000, 3;
      27, 0.0000000000000000, 3;
      30, 0.0000000000000000, 3;
      33, 0.0000000000000000, 3;
];

ROB = [
];

disp('---------------------------------------------------------------');
disp('Inicializando modelo de datos...');

model.nnodes = size(xnode,1);

model.k = [
    1.0000000000000000;
    1.0000000000000000;
    1.0000000000000000;
    1.0000000000000000;
    1.0000000000000000;
    1.0000000000000000;
    1.0000000000000000;
    1.0000000000000000;
    1.0000000000000000;
    1.0000000000000000;
    1.0000000000000000;
    1.0000000000000000;
    1.0000000000000000;
    1.0000000000000000;
    1.0000000000000000;
    1.0000000000000000;
    1.0000000000000000;
    1.0000000000000000;
    1.0000000000000000;
    1.0000000000000000;
    1.0000000000000000;
    1.0000000000000000;
    1.0000000000000000;
    1.0000000000000000;
    1.0000000000000000;
    1.0000000000000000;
    1.0000000000000000;
    1.0000000000000000;
    1.0000000000000000;
    1.0000000000000000;
    1.0000000000000000;
    1.0000000000000000;
    1.0000000000000000;
];

model.c = [
    0.0000000000000000;
    0.0000000000000000;
    0.0000000000000000;
    0.0000000000000000;
    0.0000000000000000;
    0.0000000000000000;
    0.0000000000000000;
    0.0000000000000000;
    0.0000000000000000;
    0.0000000000000000;
    0.0000000000000000;
    0.0000000000000000;
    0.0000000000000000;
    0.0000000000000000;
    0.0000000000000000;
    0.0000000000000000;
    0.0000000000000000;
    0.0000000000000000;
    0.0000000000000000;
    0.0000000000000000;
    0.0000000000000000;
    0.0000000000000000;
    0.0000000000000000;
    0.0000000000000000;
    0.0000000000000000;
    0.0000000000000000;
    0.0000000000000000;
    0.0000000000000000;
    0.0000000000000000;
    0.0000000000000000;
    0.0000000000000000;
    0.0000000000000000;
    0.0000000000000000;
];

model.G = [
    1000.0000000000000000;
    1000.0000000000000000;
    1000.0000000000000000;
    1000.0000000000000000;
    1000.0000000000000000;
    1000.0000000000000000;
    1000.0000000000000000;
    1000.0000000000000000;
    1000.0000000000000000;
    1000.0000000000000000;
    1000.0000000000000000;
    1000.0000000000000000;
    1000.0000000000000000;
    1000.0000000000000000;
    1000.0000000000000000;
    1000.0000000000000000;
    1000.0000000000000000;
    1000.0000000000000000;
    1000.0000000000000000;
    1000.0000000000000000;
    1000.0000000000000000;
    1000.0000000000000000;
    1000.0000000000000000;
    1000.0000000000000000;
    1000.0000000000000000;
    1000.0000000000000000;
    1000.0000000000000000;
    1000.0000000000000000;
    1000.0000000000000000;
    1000.0000000000000000;
    1000.0000000000000000;
    1000.0000000000000000;
    1000.0000000000000000;
];

% Esquema Temporal: [0] Explícito, [1] Implícito, [X] Estacionario
model.ts = 1;

% Parámetros para esquemas temporales
model.rho = 1.0000000000000000;
model.cp = 1.0000000000000000;
model.maxit =          500;
model.tol = 1.000000e-06;
model.dt = 0.0500000000000000;

% Condición inicial
model.PHI_n = mean(DIR(:,2))*ones(model.nnodes,1);

disp('Iniciando el método numérico...');

% Llamada principal al Método de Diferencias Finitas
[PHI,Q] = fdm2d(xnode, icone, DIR, NEU, ROB, model);

disp('Finalizada la ejecución del método numérico.');

disp('---------------------------------------------------------------');
disp('Iniciando el post-procesamiento...');

% mode ---> modo de visualización:
%           [0] 2D - Con malla
%           [1] 3D - Con malla
%           [2] 2D - Sin malla
%           [3] 3D - Sin malla
% graph --> tipo de gráfica:
%           [0] Temperatura (escalar)
%           [1] Flujo de Calor (vectorial)
%           [2] Flujo de Calor eje-x (escalar)
%           [3] Flujo de Calor eje-y (escalar)
%           [4] Magnitud de Flujo de Calor (escalar)
mode = 0;
graph = 0;
fdm2d_graph_mesh(full(PHI),Q,xnode,icone,mode,graph);

disp('Finalizado el post-procesamiento.');
